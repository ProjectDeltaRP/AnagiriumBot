from disnake import VoiceChannel

import data
from bot_init import bot
from commands.utils import has_any_role_by_keys
from modules.utils_data import save_data


@bot.slash_command(name="lock", description="–ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –¥—Ä—É–≥–∏—Ö")
async def lock_channel(ctx):
    if ctx.author.voice and ctx.author.voice.channel.id in data.private_channels.values():
        channel = ctx.author.voice.channel
        await channel.set_permissions(ctx.guild.default_role, connect=False)
        await ctx.send("üîí –ö–∞–Ω–∞–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
    else:
        await ctx.send("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)

@bot.slash_command(name="unlock", description="–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –¥—Ä—É–≥–∏—Ö")
async def unlock_channel(ctx):
    if ctx.author.voice and ctx.author.voice.channel.id in data.private_channels.values():
        channel = ctx.author.voice.channel
        await channel.set_permissions(ctx.guild.default_role, connect=True)
        await ctx.send("üîì –ö–∞–Ω–∞–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
    else:
        await ctx.send("–í—ã –Ω–µ –≤ —Å–≤–æ–µ–º –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)

# –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–∞
@bot.slash_command(description="–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
@has_any_role_by_keys("head_project")
async def add_trigger_channel(inter, channel: VoiceChannel, tag: str):
    data.trigger_channels[channel.id] = tag
    await save_data()
    await inter.response.send_message(f"–î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª {channel.mention} —Å —Ç–µ–≥–æ–º '{tag}'")


# –°–ª—ç—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–∞
@bot.slash_command(description="–£–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª")

async def remove_trigger_channel(inter, channel: VoiceChannel):
    if channel.id in data.trigger_channels:
        del data.trigger_channels[channel.id]
        await save_data()
        await inter.response.send_message(f"–£–¥–∞–ª—ë–Ω —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª {channel.mention}")
    else:
        await inter.response.send_message(f"–ö–∞–Ω–∞–ª {channel.mention} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–æ–º")


# –ú–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–æ–≤
@bot.slash_command(description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª–æ–≤")
async def list_trigger_channels(inter):
    if not data.trigger_channels:
        await inter.response.send_message("–¢—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
        return
    msg = "–¢—Ä–∏–≥–≥–µ—Ä-–∫–∞–Ω–∞–ª—ã:\n"
    for ch_id, tag in data.trigger_channels.items():
        msg += f"- <#{ch_id}> —Å —Ç–µ–≥–æ–º '{tag}'\n"
    await inter.response.send_message(msg)
