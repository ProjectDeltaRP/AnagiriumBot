import random

import disnake

import data
from bot_init import bot
from modules.utils_data import save_data


@bot.event
async def on_voice_state_update(member, before, after):
    print(f"VOICE EVENT | {member} | {before.channel} ‚Üí {after.channel}")
    if before.channel == after.channel:
        return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ data.trigger_channels
    if after.channel and after.channel.id in data.trigger_channels:
        guild = member.guild
        category = after.channel.category

        overwrites = {
            guild.default_role: disnake.PermissionOverwrite(view_channel=True, connect=True),  # –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö
            member: disnake.PermissionOverwrite(view_channel=True, connect=True, manage_channels=True),
            guild.me: disnake.PermissionOverwrite(view_channel=True)
        }

        freq = f"{random.randint(60, 110)}.{random.randint(0, 9)}"
        tag = data.trigger_channels[after.channel.id]
        channel = await guild.create_voice_channel(
            name=f"–ß–∞—Å—Ç–æ—Ç–∞ {tag}-{freq}: {member.display_name}",
            category=category,
            overwrites=overwrites,
            user_limit=5
        )

        data.private_channels[str(member.id)] = channel.id
        await member.move_to(channel)
        await save_data()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å —Ç–∞–∫–∏–º –∂–µ ID, –∫–∞–∫ —É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ
        text_channel = guild.get_channel(after.channel.id)
        if text_channel is None:
            text_channel = None
            if category:
                for ch in category.channels:
                    if isinstance(ch, disnake.TextChannel):
                        text_channel = ch
                        break

        if text_channel:
            embed = disnake.Embed(
                title="üéô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º",
                description=(
                    f"–ü—Ä–∏–≤–µ—Ç, {member.mention}! –≠—Ç–æ —Ç–≤–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.\n\n"
                    "üîπ **–ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–æ–º:**\n"
                    "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∞ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º**, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø.\n"
                    "‚Ä¢ –ß—Ç–æ–±—ã –ø–æ–∫–∏–Ω—É—Ç—å –∫–∞–Ω–∞–ª ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–π–¥–∏ –∏–∑ –Ω–µ–≥–æ.\n"
                    "‚Ä¢ –ö–∞–Ω–∞–ª —É–¥–∞–ª–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∫–æ–≥–¥–∞ –≤—Å–µ —É–π–¥—É—Ç.\n\n"
                    "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äî –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."
                ),
                color=0x2f3136,
                timestamp=disnake.utils.utcnow()
            )
            embed.set_footer(text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª")

            await text_channel.send(embed=embed)

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    if before.channel and before.channel.id in data.private_channels.values():
        if len(before.channel.members) == 0:
            print(f"–£–¥–∞–ª—è—é –∫–∞–Ω–∞–ª {before.channel.name} (ID {before.channel.id}) ‚Äî –ø—É—Å—Ç–æ–π")
            await before.channel.delete()
            data.private_channels = {
                k: v for k, v in data.private_channels.items()
                if v != before.channel.id
            }
            await save_data()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
            print("–ö–∞–Ω–∞–ª —É–¥–∞–ª—ë–Ω, —Å–ª–æ–≤–∞—Ä—å –æ–±–Ω–æ–≤–ª—ë–Ω")
